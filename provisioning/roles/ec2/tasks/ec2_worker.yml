---

###
# Worker 1
###

- name: get subnet_public_0 subnet id
  command: "aws ec2 describe-subnets --filters Name=tag:Name,Values={{vpc_prefix}}_subnet_public_0 --query 'Subnets[0].SubnetId' --output text"
  register: subnet_public_0
  when: worker_1

- name: launch worker 1
  local_action:
    module: ec2
    region: "{{ region }}"
    key_name: "{{ key_pair_name }}"
    instance_type: "{{ worker_instance_type }}"
    image: "{{ image }}"
    wait: yes
    group: "{{ vpc_prefix }}_sg_worker"
    vpc_subnet_id: "{{ subnet_public_0.stdout }}"
    assign_public_ip: yes
    instance_tags:
      Name: worker1
      class: worker
    exact_count: 1
    count_tag:
      Name: worker-1
  register: worker_instance_1
  when: subnet_public_0.stdout!="None"
  when: worker_1

- debug:
    msg: "Allocated VPC EC2 public IP{{ worker_instance_1.instances[0].public_ip }}|"
  with_items: worker_instance_1.instances
  when: worker_1

- name: tag worker_instance_1
  local_action: ec2_tag resource={{item.id}} region=us-west-2 state=present
  with_items: worker_instance_1.instances
  args:
    tags:
      project: liaison
      class: worker
      group: worker
  when: worker_1


###
# Worker 2
###

- name: get subnet_public_1 subnet id
  command: "aws ec2 describe-subnets --filters Name=tag:Name,Values={{vpc_prefix}}_subnet_public_1 --query 'Subnets[0].SubnetId' --output text"
  register: subnet_public_1
  when: worker_2

- name: launch worker 2
  local_action:
    module: ec2
    region: "{{ region }}"
    key_name: "{{ key_pair_name }}"
    instance_type: "{{ worker_instance_type }}"
    image: "{{ image }}"
    wait: yes
    group: "{{ vpc_prefix }}_sg_worker"
    vpc_subnet_id: "{{ subnet_public_1.stdout }}"
    assign_public_ip: yes
    instance_tags:
      Name: worker2
      class: worker
    exact_count: 1
    count_tag:
      Name: worker-2
  register: worker_instance_2
  when: subnet_public_1.stdout!="None"
  when: worker_2

- debug:
    msg: "Allocated VPC EC2 public IP{{ worker_instance_2.instances[0].public_ip }}|"
  with_items: worker_instance_2.instances
  when: worker_2

- name: tag worker_instance_2
  local_action: ec2_tag resource={{item.id}} region=us-west-2 state=present
  with_items: worker_instance_2.instances
  args:
    tags:
      project: liaison
      class: worker
      group: worker
  when: worker_2


###
# Worker 3
###

- name: get subnet_public_1 subnet id
  command: "aws ec2 describe-subnets --filters Name=tag:Name,Values={{vpc_prefix}}_subnet_public_1 --query 'Subnets[0].SubnetId' --output text"
  register: subnet_public_1
  when: worker_3

- name: launch worker 3
  local_action:
    module: ec2
    region: "{{ region }}"
    key_name: "{{ key_pair_name }}"
    instance_type: "{{ worker_instance_type }}"
    image: "{{ image }}"
    wait: yes
    group: "{{ vpc_prefix }}_sg_worker"
    vpc_subnet_id: "{{ subnet_public_1.stdout }}"
    assign_public_ip: yes
    instance_tags:
      Name: worker3
      class: worker
    exact_count: 1
    count_tag:
      Name: worker-3
  register: worker_instance_3
  when: subnet_public_1.stdout!="None"
  when: worker_3

- debug:
    msg: "Allocated VPC EC2 public IP{{ worker_instance_3.instances[0].public_ip }}|"
  with_items: worker_instance_3.instances
  when: worker_3

- name: tag worker_instance_3
  local_action: ec2_tag resource={{item.id}} region=us-west-2 state=present
  with_items: worker_instance_3.instances
  args:
    tags:
      project: liaison
      class: worker
      group: worker
  when: worker_3


###
# Worker 4
###

- name: get subnet_public_0 subnet id
  command: "aws ec2 describe-subnets --filters Name=tag:Name,Values={{vpc_prefix}}_subnet_public_0 --query 'Subnets[0].SubnetId' --output text"
  register: subnet_public_0
  when: worker_4

- name: launch worker 4
  local_action:
    module: ec2
    region: "{{ region }}"
    key_name: "{{ key_pair_name }}"
    instance_type: "{{ worker_instance_type }}"
    image: "{{ image }}"
    wait: yes
    group: "{{ vpc_prefix }}_sg_worker"
    vpc_subnet_id: "{{ subnet_public_0.stdout }}"
    assign_public_ip: yes
    instance_tags:
      Name: worker4
      class: worker
    exact_count: 1
    count_tag:
      Name: worker-4
  register: worker_instance_4
  when: subnet_public_0.stdout!="None"
  when: worker_4

- debug:
    msg: "Allocated VPC EC2 public IP{{ worker_instance_4.instances[0].public_ip }}|"
  with_items: worker_instance_4.instances
  when: worker_4

- name: tag worker_instance_4
  local_action: ec2_tag resource={{item.id}} region=us-west-2 state=present
  with_items: worker_instance_4.instances
  args:
    tags:
      project: liaison
      class: worker
      group: worker
  when: worker_4
